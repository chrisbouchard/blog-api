buildscript {
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE'
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'war'
    
    id 'org.flywaydb.flyway' version '3.2'
}

apply plugin: 'spring-boot'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '0.1.0'

bootRepackage {
    mainClass = 'net.upliftinglemma.blog.Application'
}

dependencies {
    compile 'log4j:log4j'
    
    compile 'org.apache.commons:commons-lang3:3.+'
    compile 'org.apache.commons:commons-collections4:4.+'
    
    compile 'org.hibernate:hibernate-validator'
    
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    testCompile 'junit:junit'

    testCompile 'org.mockito:mockito-all:2.0.+'
    
    runtime 'org.aspectj:aspectjweaver'

    runtime 'org.hibernate:hibernate-entitymanager'

    runtime 'org.hsqldb:hsqldb'
    
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

// Make Eclipse use the JRE matching version used by project, not the
// workspace default. Based on: http://stackoverflow.com/a/22866932
afterEvaluate {
    if (project.sourceCompatibility != null) {
        def target = project.sourceCompatibility.toString()
        def containerPrefix = "org.eclipse.jdt.launching.JRE_CONTAINER"
        def containerSuffix

        if (target =~ /1.[4-5]/) {
            containerSuffix = "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE"
        }
        else if (target =~ /1.[6-8]/) {
            containerSuffix = "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE"
        }

        if (containerSuffix != null) {
            project.eclipse.classpath {
                containers.removeAll { it.startsWith(containerPrefix) }
                containers.add "${containerPrefix}${containerSuffix}-${target}"
            }
        }
    }
}
